#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# waits:
# first wait to have at least one of a type, then wait for all to be in a state; if waiting for state with empty set, kubectl fails

name: Test skupper-router main

on: [ push ]

jobs:
  test-image:
    name: Publish skupper-router image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        skupperGitRef: [ 0.8.7 ]

    steps:

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: install microk8s
        run: |
          sudo snap install microk8s --classic --channel=1.21/stable
          sudo usermod -a -G microk8s runner
          sudo chown -f -R runner ~/.kube
          microk8s enable dns ingress registry metallb:10.64.140.43-10.64.140.49
          microk8s status --wait-ready

          mkdir -p $HOME/.kube
          microk8s config > $HOME/.kube/config

      - name: wait for k3s to finish starting
        run: |
          timeout 5m bash -c 'until nc -z 127.0.0.1 6443; do sleep 1; done' || :
          timeout 1m bash -c 'until [[ $(microk8s kubectl get nodes --output name | wc -l) -gt 0 ]]; do sleep 1; done' || :
          microk8s kubectl wait --for=condition=Ready nodes --all --timeout=600s

      - name: print stuff
        if: "${{ always() }}"
        run: |
          for i in `seq 10`; do microk8s kubectl get pods --all-namespaces; sleep 1; done

      - uses: actions/checkout@v2
        if: "${{ always() }}"
        with:
          repository: 'skupperproject/skupper'
          ref: ${{ matrix.skupperGitRef }}
          path: 'skupper'

      - name: Go Build Cache
        uses: actions/cache@v2
        if: "${{ always() }}"
        with:
          path: |
            ${{ steps.go-cache-paths.outputs.go-build }}
            ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: compile skupper
        if: "${{ always() }}"
        run:
          make all
        working-directory: skupper



      - name: run integration tests
        if: "${{ always() }}"
        run: |
          export QDROUTERD_IMAGE=quay.io/jdanek/skupper-router:latest
          go test -count=1 -p=1 -timeout=60m -tags=integration -v ./test/integration/...
        working-directory: skupper
        env:
          KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"

      - name: dump k3s log
        if: "${{ always() }}"
        run: |
          sudo journalctl -u k3s

#           --disable=traefik --disable=servicelb  https://github.com/docker/build-push-action/blob/master/docs/advanced/share-image-jobs.md
# https://github.com/docker/build-push-action/issues/225
# https://medium.com/thermokline/comparing-k8s-load-balancers-2f5c76ea8f31