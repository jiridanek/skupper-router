#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: Build

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      protonRepository:
        description: GitHub repository where to fetch Qpid Proton from
        type: string
        default: 'apache/qpid-proton'
        required: false
      protonBranch:
        description: Branch in the protonRepository to check out (in addition to hardcoded branches)
        type: string
        default: main
        required: false

# known limitation https://github.com/actions/runner/issues/480
env:
  protonRepository: "${{ github.event.inputs.protonRepository || 'apache/qpid-proton' }}"
  protonBranch: "${{ github.event.inputs.protonBranch || 'main' }}"

jobs:

  container:
    name: Container image
    runs-on: ubuntu-latest
    env:
      ImageName: quay.io/skupper/skupper-router@sha256:0d207c60a150cad4d7743def8c9fc3565724e8980c6d93c326ba26dde44c675e

    steps:

      - uses: actions/checkout@v3

      # https://podman.io/docs/installation#ubuntu
      - name: Upgrade Podman
        run: |
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key \
          | gpg --dearmor \
          | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg]\
            https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" \
          | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
          sudo apt-get update -qq
          sudo apt-get -qq -y install podman

#      - name: Build Containerfile
#        run: |
#          podman build -t ${{ env.ImageName }} -f ./Containerfile .

      # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
      # This can result in a CI failure, see: https://github.com/rust-lang/rustup/issues/3029
      - name: Install rust with rustup
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2

      - name: Start podman service
        run: |
          systemctl --user enable --now podman.socket
          echo "PODMAN_SOCK=/run/user/${UID}/podman/podman.sock" >> $GITHUB_ENV
          echo "DOCKER_HOST=unix:///run/user/${UID}/podman/podman.sock" >> $GITHUB_ENV

#      - name: Compile and run .rs tests
#        run: |
#          cargo check
#          cargo test -- --test-threads=1 --nocapture
#        env:
#          QDROUTERD_IMAGE: ${{ env.ImageName }}
#          CARGO_INCREMENTAL: 0
#          RUST_LOG: info
#          RUST_BACKTRACE: 1

      # Trivy and Grype are the scanners that GitLab integrates with (at the time of writing)

      - name: Run Trivy security scan on the image
        if: ${{ ! cancelled() }}
        # https://aquasecurity.github.io/trivy/v0.43/getting-started/installation/#use-container-image
        run: |
          podman run --rm --volume ${PODMAN_SOCK}:/var/run/docker.sock -v $HOME/.cache:/root/.cache/ docker.io/aquasec/trivy:latest \
            image --scanners secret --exit-code=1 ${{ env.ImageName }}

      - name: Run Grype security scan on the image
        if: ${{ ! cancelled() }}
        # https://github.com/anchore/grype#getting-started
        run: |
          podman run --rm --volume ${PODMAN_SOCK}:/var/run/docker.sock docker.io/anchore/grype:latest \
            --only-fixed --fail-on low ${{ env.ImageName }}
