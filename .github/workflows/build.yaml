#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: Build

on: [push, pull_request, workflow_dispatch]

jobs:

  rpm:
    name: 'Build and test RPM (${{ matrix.container }}:${{ matrix.containerTag }})'
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os: [ 'ubuntu-20.04' ]
        container: [ 'centos' ]
        containerTag: [ 'stream8' ]

    container:
      image: 'quay.io/${{ matrix.container }}/${{ matrix.container }}:${{ matrix.containerTag }}'
      volumes:
        - ${{github.workspace}}:${{github.workspace}}

    env:
      DNF: ${{github.workspace}}/build

    steps:
      - name: Install build dependencies (1/2)
        run: |
          dnf config-manager --set-enabled powertools
          dnf install --setopt=tsflags=nodocs --setopt=install_weak_deps=False -y epel-release 'dnf-command(copr)' 'dnf-command(builddep)'
          dnf copr enable -y clime/rpkg-util
          dnf install --setopt=tsflags=nodocs --setopt=install_weak_deps=False -y git rpkg

      - uses: actions/checkout@v2

      - name: Install build dependencies (2/2)
        run: |
          dnf install --setopt=tsflags=nodocs --setopt=install_weak_deps=False -y gcc gcc-c++
          rpkg spec --outdir /tmp/rpkg
          dnf builddep --setopt=tsflags=nodocs --setopt=install_weak_deps=False -y /tmp/rpkg/skupper-router.spec

      - name: Build packages
        run: |
          mkdir /tmp/skupper-rpms
          rpkg local --nocheck --outdir /tmp/skupper-rpms

      - name: Install built packages
        run: |
          dnf install -y /tmp/skupper-rpms/*/*.rpm

      - name: Check that skrouterd works
        run: |
          skrouterd -c /dev/empty |& grep "Configuration file could not be opened"

      - name: Check that manpages work
        run: |
          dnf install -y man

          man skrouterd
          man skstat
          man skmanage

  rat_check:
    name: RAT Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.6
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - name: RAT Check
        run: mvn apache-rat:check

      - name: Output
        if: ${{ ! cancelled() }}
        run: cat target/rat.txt || echo "Unable to print output"
